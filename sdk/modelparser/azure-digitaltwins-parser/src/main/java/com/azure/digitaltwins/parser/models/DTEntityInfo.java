// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) Code Generator

package com.azure.digitaltwins.parser.models;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Iterator;
import java.util.Map;
import java.util.HashSet;
import java.util.Arrays;
import java.util.Set;
import java.util.regex.Pattern;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.azure.digitaltwins.parser.ContextHistory;
import com.azure.digitaltwins.parser.VersionedContext;
import com.azure.digitaltwins.parser.Dtmi;
import com.azure.digitaltwins.parser.TypeChecker;
import com.azure.digitaltwins.parser.PropertyValueConstrainer;
import com.azure.digitaltwins.parser.PropertyInstanceBinder;
import com.azure.digitaltwins.parser.ValueConstraints;

/**
 * Class {@link DTEntityInfo} corresponds to an element of type Entity in a DTDL model.
 * <p>
 * This is a base class for all classes that correspond to elements in DTDL models.
 * </p>
 */
public abstract class DTEntityInfo implements TypeChecker {
    private static final Map<Integer, String> BAD_TYPE_ACTION_FORMAT = new HashMap<>();

    private static final Map<Integer, String> BAD_TYPE_CAUSE_FORMAT = new HashMap<>();

    private static final Map<Integer, Set<DTEntityKind>> CONCRETE_KINDS = new HashMap<>();

    private static final HashSet<String> VERSION_LESS_TYPES = new HashSet<>();

    private Dtmi childOf;

    private String comment;

    private Dtmi definedIn;

    private HashMap<String, String> description;

    private HashMap<String, String> displayName;

    private int dtdlVersion;

    private DTEntityKind entityKind;

    private Dtmi id;

    private int languageVersion;

    static {
        VERSION_LESS_TYPES.add("dtmi:dtdl:class:Entity");

        CONCRETE_KINDS.put(2, new HashSet<>());
        CONCRETE_KINDS.get(2).add(DTEntityKind.ARRAY);
        CONCRETE_KINDS.get(2).add(DTEntityKind.BOOLEAN);
        CONCRETE_KINDS.get(2).add(DTEntityKind.COMMAND);
        CONCRETE_KINDS.get(2).add(DTEntityKind.COMMAND_PAYLOAD);
        CONCRETE_KINDS.get(2).add(DTEntityKind.COMMAND_TYPE);
        CONCRETE_KINDS.get(2).add(DTEntityKind.COMPONENT);
        CONCRETE_KINDS.get(2).add(DTEntityKind.DATE);
        CONCRETE_KINDS.get(2).add(DTEntityKind.DATE_TIME);
        CONCRETE_KINDS.get(2).add(DTEntityKind.DOUBLE);
        CONCRETE_KINDS.get(2).add(DTEntityKind.DURATION);
        CONCRETE_KINDS.get(2).add(DTEntityKind.ENUM);
        CONCRETE_KINDS.get(2).add(DTEntityKind.ENUM_VALUE);
        CONCRETE_KINDS.get(2).add(DTEntityKind.FIELD);
        CONCRETE_KINDS.get(2).add(DTEntityKind.FLOAT);
        CONCRETE_KINDS.get(2).add(DTEntityKind.INTEGER);
        CONCRETE_KINDS.get(2).add(DTEntityKind.INTERFACE);
        CONCRETE_KINDS.get(2).add(DTEntityKind.LONG);
        CONCRETE_KINDS.get(2).add(DTEntityKind.MAP);
        CONCRETE_KINDS.get(2).add(DTEntityKind.MAP_KEY);
        CONCRETE_KINDS.get(2).add(DTEntityKind.MAP_VALUE);
        CONCRETE_KINDS.get(2).add(DTEntityKind.OBJECT);
        CONCRETE_KINDS.get(2).add(DTEntityKind.PROPERTY);
        CONCRETE_KINDS.get(2).add(DTEntityKind.RELATIONSHIP);
        CONCRETE_KINDS.get(2).add(DTEntityKind.STRING);
        CONCRETE_KINDS.get(2).add(DTEntityKind.TELEMETRY);
        CONCRETE_KINDS.get(2).add(DTEntityKind.TIME);

        CONCRETE_KINDS.put(3, new HashSet<>());
        CONCRETE_KINDS.get(3).add(DTEntityKind.ARRAY);
        CONCRETE_KINDS.get(3).add(DTEntityKind.BOOLEAN);
        CONCRETE_KINDS.get(3).add(DTEntityKind.COMMAND);
        CONCRETE_KINDS.get(3).add(DTEntityKind.COMMAND_REQUEST);
        CONCRETE_KINDS.get(3).add(DTEntityKind.COMMAND_RESPONSE);
        CONCRETE_KINDS.get(3).add(DTEntityKind.COMMAND_TYPE);
        CONCRETE_KINDS.get(3).add(DTEntityKind.COMPONENT);
        CONCRETE_KINDS.get(3).add(DTEntityKind.DATE);
        CONCRETE_KINDS.get(3).add(DTEntityKind.DATE_TIME);
        CONCRETE_KINDS.get(3).add(DTEntityKind.DOUBLE);
        CONCRETE_KINDS.get(3).add(DTEntityKind.DURATION);
        CONCRETE_KINDS.get(3).add(DTEntityKind.ENUM);
        CONCRETE_KINDS.get(3).add(DTEntityKind.ENUM_VALUE);
        CONCRETE_KINDS.get(3).add(DTEntityKind.FIELD);
        CONCRETE_KINDS.get(3).add(DTEntityKind.FLOAT);
        CONCRETE_KINDS.get(3).add(DTEntityKind.INTEGER);
        CONCRETE_KINDS.get(3).add(DTEntityKind.INTERFACE);
        CONCRETE_KINDS.get(3).add(DTEntityKind.LONG);
        CONCRETE_KINDS.get(3).add(DTEntityKind.MAP);
        CONCRETE_KINDS.get(3).add(DTEntityKind.MAP_KEY);
        CONCRETE_KINDS.get(3).add(DTEntityKind.MAP_VALUE);
        CONCRETE_KINDS.get(3).add(DTEntityKind.OBJECT);
        CONCRETE_KINDS.get(3).add(DTEntityKind.PROPERTY);
        CONCRETE_KINDS.get(3).add(DTEntityKind.RELATIONSHIP);
        CONCRETE_KINDS.get(3).add(DTEntityKind.STRING);
        CONCRETE_KINDS.get(3).add(DTEntityKind.TELEMETRY);
        CONCRETE_KINDS.get(3).add(DTEntityKind.TIME);

        BAD_TYPE_ACTION_FORMAT.put(2, "Provide a @type in the set of allowable types.");
        BAD_TYPE_ACTION_FORMAT.put(3, "Provide a @type in the set of allowable types.");

        BAD_TYPE_CAUSE_FORMAT.put(2, "Top-level element{secondaryId:e} does not have @type of Array, Command, CommandPayload, Component, Enum, EnumValue, Field, Interface, Map, MapKey, MapValue, Object, Property, Relationship, or Telemetry.");
        BAD_TYPE_CAUSE_FORMAT.put(3, "Top-level element{secondaryId:e} does not have @type of Array, Command, CommandRequest, CommandResponse, Component, Enum, EnumValue, Field, Interface, Map, MapKey, MapValue, Object, Property, Relationship, or Telemetry.");
    }

    /**
     * Get Gets the value of the '@id' property of the parent DTDL element in which this element is defined.
     * @return childOf.
     */
    public Dtmi getChildOf() {
        return this.childOf;
    }

    /**
     * Get The value of the 'comment' property of the DTDL element that corresponds to this object.
     * @return comment.
     */
    public String getComment() {
        return this.comment;
    }

    /**
     * Get Gets the value of the '@id' property of the partition DTDL element in which this element is defined.
     * @return definedIn.
     */
    public Dtmi getDefinedIn() {
        return this.definedIn;
    }

    /**
     * Get The value of the 'description' property of the DTDL element that corresponds to this object.
     * @return description.
     */
    public HashMap<String, String> getDescription() {
        return this.description;
    }

    /**
     * Get The value of the 'displayName' property of the DTDL element that corresponds to this object.
     * @return displayName.
     */
    public HashMap<String, String> getDisplayName() {
        return this.displayName;
    }

    /**
     * Get Gets the DTDL version in which this element is defined.
     * @return dtdlVersion.
     */
    public int getDtdlVersion() {
        return this.dtdlVersion;
    }

    /**
     * Get Gets the kind of Entity.
     * @return entityKind.
     */
    public DTEntityKind getEntityKind() {
        return this.entityKind;
    }

    /**
     * Get Gets the value of the '@id' property of the DTDL element that corresponds to this object.
     * @return id.
     */
    public Dtmi getId() {
        return this.id;
    }

    /**
     * Get The value of the 'languageVersion' property of the DTDL element that corresponds to this object.
     * @return languageVersion.
     */
    public int getLanguageVersion() {
        return this.languageVersion;
    }

    /**
     * Set Gets the value of the '@id' property of the parent DTDL element in which this element is defined.
     * @param value Property value.
     */
    private void setChildOf(Dtmi value) {
        this.childOf = value;
    }

    /**
     * Set The value of the 'comment' property of the DTDL element that corresponds to this object.
     * @param value Property value.
     */
    void setComment(String value) {
        this.comment = value;
    }

    /**
     * Set Gets the value of the '@id' property of the partition DTDL element in which this element is defined.
     * @param value Property value.
     */
    private void setDefinedIn(Dtmi value) {
        this.definedIn = value;
    }

    /**
     * Set The value of the 'description' property of the DTDL element that corresponds to this object.
     * @param value Property value.
     */
    void setDescription(HashMap<String, String> value) {
        this.description = value;
    }

    /**
     * Set The value of the 'displayName' property of the DTDL element that corresponds to this object.
     * @param value Property value.
     */
    void setDisplayName(HashMap<String, String> value) {
        this.displayName = value;
    }

    /**
     * Set Gets the DTDL version in which this element is defined.
     * @param value Property value.
     */
    private void setDtdlVersion(int value) {
        this.dtdlVersion = value;
    }

    /**
     * Set Gets the kind of Entity.
     * @param value Property value.
     */
    private void setEntityKind(DTEntityKind value) {
        this.entityKind = value;
    }

    /**
     * Set Gets the value of the '@id' property of the DTDL element that corresponds to this object.
     * @param value Property value.
     */
    private void setId(Dtmi value) {
        this.id = value;
    }

    /**
     * Set The value of the 'languageVersion' property of the DTDL element that corresponds to this object.
     * @param value Property value.
     */
    void setLanguageVersion(int value) {
        this.languageVersion = value;
    }
}
