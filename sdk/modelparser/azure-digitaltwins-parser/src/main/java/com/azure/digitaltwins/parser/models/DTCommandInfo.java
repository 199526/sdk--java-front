// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) Code Generator

package com.azure.digitaltwins.parser.models;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Iterator;
import java.util.Map;
import java.util.HashSet;
import java.util.Arrays;
import java.util.Set;
import java.util.regex.Pattern;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.azure.digitaltwins.parser.ContextHistory;
import com.azure.digitaltwins.parser.VersionedContext;
import com.azure.digitaltwins.parser.Dtmi;

/**
 * Class {@link DTCommandInfo} corresponds to an element of type Command in a DTDL model.
 */
public class DTCommandInfo extends DTContentInfo implements TypeChecker, PropertyValueConstrainer, PropertyInstanceBinder, Equatable<DTCommandInfo> {
    private static final Map<Integer, String> BAD_TYPE_ACTION_FORMAT = new HashMap<>();

    private static final Map<Integer, String> BAD_TYPE_CAUSE_FORMAT = new HashMap<>();

    private static final Map<Integer, Set<DTEntityKind>> CONCRETE_KINDS = new HashMap<>();

    private static final HashSet<String> VERSION_LESS_TYPES = new HashSet<>();

    private DTCommandTypeInfo commandType;

    private Set<Integer> commandTypeAllowedVersionsV2 = new HashSet<>(Arrays.asList(2));

    private Set<Integer> commandTypeAllowedVersionsV3 = new HashSet<>(Arrays.asList(3));

    private List<String> commandTypeInstanceProperties = null;

    private List<ValueConstraints> commandTypeValueConstraints = null;

    private DTCommandPayloadInfo request;

    private Set<Integer> requestAllowedVersionsV2 = new HashSet<>(Arrays.asList(2));

    private Set<Integer> requestAllowedVersionsV3 = new HashSet<>(Arrays.asList(3));

    private List<String> requestInstanceProperties = null;

    private List<ValueConstraints> requestValueConstraints = null;

    private DTCommandPayloadInfo response;

    private Set<Integer> responseAllowedVersionsV2 = new HashSet<>(Arrays.asList(2));

    private Set<Integer> responseAllowedVersionsV3 = new HashSet<>(Arrays.asList(3));

    private List<String> responseInstanceProperties = null;

    private List<ValueConstraints> responseValueConstraints = null;

    static {
        VERSION_LESS_TYPES.add("dtmi:dtdl:class:Command");
        VERSION_LESS_TYPES.add("dtmi:dtdl:class:Content");
        VERSION_LESS_TYPES.add("dtmi:dtdl:class:Entity");
        VERSION_LESS_TYPES.add("dtmi:dtdl:class:NamedEntity");

        CONCRETE_KINDS.put(2, new HashSet<>());
        CONCRETE_KINDS.get(2).add(DTEntityKind.COMMAND);

        CONCRETE_KINDS.put(3, new HashSet<>());
        CONCRETE_KINDS.get(3).add(DTEntityKind.COMMAND);

        BAD_TYPE_ACTION_FORMAT.put(2, "Provide a value for property '{property}' with @type Command.");
        BAD_TYPE_ACTION_FORMAT.put(3, "Provide a value for property '{property}' with @type Command.");

        BAD_TYPE_CAUSE_FORMAT.put(2, "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command.");
        BAD_TYPE_CAUSE_FORMAT.put(3, "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command.");
    }

    /**
     * Get The value of the 'commandType' property of the DTDL element that corresponds to this object.
     * @return commandType.
     */
    public DTCommandTypeInfo getCommandType() {
        return this.commandType
    }

    /**
     * Get The value of the 'request' property of the DTDL element that corresponds to this object.
     * @return request.
     */
    public DTCommandPayloadInfo getRequest() {
        return this.request
    }

    /**
     * Get The value of the 'response' property of the DTDL element that corresponds to this object.
     * @return response.
     */
    public DTCommandPayloadInfo getResponse() {
        return this.response
    }

    /**
     * Set The value of the 'commandType' property of the DTDL element that corresponds to this object.
     * @param value Property value.
     */
    void setCommandType(DTCommandTypeInfo value) {
        this.commandType = value;
    }

    /**
     * Set The value of the 'request' property of the DTDL element that corresponds to this object.
     * @param value Property value.
     */
    void setRequest(DTCommandPayloadInfo value) {
        this.request = value;
    }

    /**
     * Set The value of the 'response' property of the DTDL element that corresponds to this object.
     * @param value Property value.
     */
    void setResponse(DTCommandPayloadInfo value) {
        this.response = value;
    }
}
