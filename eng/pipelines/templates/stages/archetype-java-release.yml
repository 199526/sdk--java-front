parameters:
  - name: DependsOn
    type: object
  - name: ServiceDirectory
    type: string
  - name: SDKType
    type: string
  - name: Artifacts
    type: object
    default: []
  - name: TestPipeline
    type: boolean
    default: false
  - name: ArtifactName
    type: string
    default: 'not-specified'
  - name: TargetDocRepoName
    type: string
    default: ''
  - name: EnableIntegrationStage
    type: boolean
    default: true

stages:
 
  # We generate two interdependent stages for each artifact listed in the ci.yml file, creates the release
  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they
  # effectively burn the version number. For testing of packages prior to burning the version number -
  # the Validation step below publishes a package to a "burner" feed which is cleaned up after the
  # pipeline completes.
  - ${{if and(in(variables['Build.Reason'], 'Manual', ''), eq(variables['System.TeamProject'], 'internal'))}}:
    - ${{ each artifact in parameters.Artifacts }}:
      - stage:
        displayName: 'Release: ${{artifact.name}}'
        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))
        jobs:
          - ${{if ne(artifact.skipPublishDocMs, 'true')}}:
            - deployment: PublishDocsMs
              displayName: Docs.MS Release
              condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
              environment: githubio

              pool:
                name: azsdk-pool-mms-ubuntu-2004-general
                vmImage: MMSUbuntu20.04

              variables:
                DocValidationImageId: azuresdkimages.azurecr.io/javarefautocr:latest
              strategy:
                runOnce:
                  deploy:
                    steps:
                      - download: current
                        displayName: 'Download Artifact: ${{parameters.ArtifactName}}'
                        artifact: ${{parameters.ArtifactName}}
                      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
                        parameters:
                          SkipDefaultCheckout: true
                          Paths:
                            - sdk
                            - common/perf-test-core
                            - .github/CODEOWNERS
                            - '!sdk/**/test-recordings'
                            - '!sdk/**/session-records'
                      - download: current
                        displayName: 'Download Artifact: ${{parameters.ArtifactName}}'
                        artifact: ${{parameters.ArtifactName}}
                      # Pull and build the docker image.
                      - template: /eng/common/pipelines/templates/steps/update-docsms-metadata.yml
                        parameters:
                          PackageInfoLocations:
                            - $(Pipeline.Workspace)/${{parameters.ArtifactName}}/PackageInfo/${{artifact.name}}.json
                          WorkingDirectory: $(System.DefaultWorkingDirectory)
                          TargetDocRepoOwner: 'Azure'
                          TargetDocRepoName: ${{parameters.TargetDocRepoName}}
                          Language: 'java'
                          SparseCheckoutPaths:
                            - docs-ref-services/
                            - metadata/
                          DocValidationImageId: "$(DocValidationImageId)"
                      - template: /eng/pipelines/templates/steps/fetch-package-list.yml
                        parameters: 
                          JavaDocJarLocation: "$(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.groupId}}/${{artifact.name}}"
                          ArtifactName: ${{artifact.name}}
                          TargetBranch: $(TargetBranchName)
                          DocRepoLocation: $(DocRepoLocation)
                          TargetDocRepoName: ${{parameters.TargetDocRepoName}}
                          TargetDocRepoOwner: "Azure"
                          
          - ${{if ne(artifact.skipPublishDocGithubIo, 'true')}}:
            - deployment: PublishDocs
              displayName: Publish Docs to GitHubIO Blob Storage
              condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
              environment: githubio
              variables:
                - template: ../variables/globals.yml
              pool:
                name: azsdk-pool-mms-win-2019-general
                vmImage: MMS2019
              strategy:
                runOnce:
                  deploy:
                    steps:
                      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
                      - download: current
                        displayName: 'Download Artifact: ${{parameters.ArtifactName}}'
                        artifact: ${{parameters.ArtifactName}}
                        patterns: ${{artifact.groupId}}/${{artifact.name}}/**
                      - pwsh: |
                          Get-ChildItem -Recurse $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.groupId}}/${{artifact.name}}
                        workingDirectory: $(Pipeline.Workspace)
                        displayName: Output Visible Artifacts
                      - template: /eng/common/pipelines/templates/steps/publish-blobs.yml
                        parameters:
                          FolderForUpload: '$(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.groupId}}/${{artifact.name}}'
                          BlobSASKey: '$(azure-sdk-docs-prod-sas)'
                          BlobName: '$(azure-sdk-docs-prod-blob-name)'
                          TargetLanguage: 'java'
                          ArtifactLocation: $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.groupId}}/${{artifact.name}}
                          # we override the regular script path because we have cloned the build tools repo as a separate artifact.
                          ScriptPath: 'eng/common/scripts/copy-docs-to-blobstorage.ps1'

          - ${{if ne(artifact.skipUpdatePackageVersion, 'true')}}:
            - deployment: UpdatePackageVersion
              displayName: "Update Package Version"
              condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))
              environment: github
              variables:
                - template: ../variables/globals.yml
              pool:
                name: azsdk-pool-mms-win-2019-general
                vmImage: MMS2019
              strategy:
                runOnce:
                  deploy:
                    steps:
                      - download: none

                      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
                        parameters:
                          Paths:
                            - '${{ parameters.ServiceDirectory }}'
                            - '**/*.xml'
                            - '!sdk/**/test-recordings'
                            - '!sdk/**/session-records'

                      - task: UsePythonVersion@0
                        displayName: 'Use Python 3.6'
                        inputs:
                          versionSpec: '3.6'

                      - script: |
                          python --version
                          python eng/versioning/set_versions.py --build-type ${{ parameters.SDKType }} --increment-version --ai ${{ artifact.name }} --gi ${{ artifact.groupId }}
                        displayName: Increment package version for ${{ artifact.groupId }} ${{ artifact.name }}

                      - script: |
                          python --version
                          python eng/versioning/update_versions.py --update-type library --build-type ${{ parameters.SDKType }} --avi --sr
                        displayName: Update pom files for new version of ${{ artifact.groupId }} ${{ artifact.name }}

                      - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
                        parameters:
                          PRBranchName: increment-package-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)
                          CommitMsg: "Increment package version after release of ${{ artifact.groupId }} ${{ artifact.name }}"
                          PRTitle: "Increment version for ${{ parameters.ServiceDirectory }} releases"
                          PRLabels: "auto-merge"
                          CloseAfterOpenForTesting: '${{ parameters.TestPipeline }}'

  - ${{if ne(parameters.EnableIntegrationStage, false)}}:
    - stage: Integration
      jobs:
      - job: PublishPackages
        condition: or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal')))
        displayName: Publish package to daily feed
        variables:
          - template: ../variables/globals.yml
          - name: RepositoryUrl
            value: https://pkgs.dev.azure.com/azure-sdk/internal/_packaging/azure-sdk-for-java-pr/maven/v1

        pool:
          name: azsdk-pool-mms-win-2019-general
          vmImage: windows-2019
        steps:
        - checkout: azure-sdk-build-tools
          path: azure-sdk-build-tools
        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
          parameters:
            SkipDefaultCheckout: true
            Repositories:
              - Name: Azure/azure-sdk-for-java
                Commitish: $(Build.SourceVersion)
                WorkingDirectory: $(Pipeline.Workspace)/azure-sdk-for-java

        - download: current
          displayName: 'Download Artifact: ${{parameters.ArtifactName}}'
          artifact: ${{parameters.ArtifactName}}
        - pwsh: |
            # For safety default to publishing to the private feed.
            # Publish to https://pkgs.dev.azure.com/azure-sdk/internal/_packaging/azure-sdk-for-java-pr/maven/v1
            if ('$(Build.Repository.Name)' -eq 'Azure/azure-sdk-for-java') {
              # Publish to the public feed
              # Publish to https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-java/maven/v1
              echo "##vso[task.setvariable variable=RepositoryUrl]https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-java/maven/v1"
              echo "Using Java Public Dev Feed"
            } else {
              echo "Using Java Private Dev Feed"
            }
          displayName: Setup TargetFeed

        - template: tools/gpg/gpg.yml@azure-sdk-build-tools

        - ${{ each artifact in parameters.Artifacts }}:
          - ${{if ne(artifact.skipPublishDevFeed, 'true')}}:
            - template: /eng/pipelines/templates/steps/java-publishing.yml
              parameters:
                ArtifactID: ${{artifact.name}}
                GroupID: ${{artifact.groupId}}
                ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}
                RepositoryUrl: $(RepositoryUrl)
                Target: JavaDevFeed
                JavaRepoRoot: $(Pipeline.Workspace)/azure-sdk-for-java
            - template: /eng/common/pipelines/templates/steps/publish-artifact.yml
              parameters:
                ArtifactName: integration-${{parameters.ArtifactName}}-${{artifact.name}}-javadevfeed-$(System.JobAttempt)
                ArtifactPath: $(Pipeline.Workspace)/${{parameters.ArtifactName}}

      - job: PublishDocsToNightlyBranch
        dependsOn: PublishPackages
        condition: or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal')))
        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          vmImage: MMSUbuntu20.04
        variables:
          DocValidationImageId: azuresdkimages.azurecr.io/javarefautocr:latest
        steps:
          - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
            parameters:
              SkipDefaultCheckout: true 
              Paths:
                - sdk/**/*.md
                - .github/CODEOWNERS
          - download: current
            displayName: 'Download Artifacts'
            artifact: ${{parameters.ArtifactName}}
          - pwsh: |
              Get-ChildItem -Recurse $(Pipeline.Workspace)/${{parameters.ArtifactName}}/
            displayName: Show visible artifacts
          # Docs daily updates is supposed to download packages from public feed repository, so we have to specify additional repositories in a POM or the profile.
          # Here is maven documentation: https://maven.apache.org/guides/mini/guide-multiple-repositories.html
          - powershell: |
              # Linux mvn `setting.xml` is sitting under path `~/.m2/setting.xml`
              Get-Command mvn
              if (!(Test-Path '~/.m2/')) {
                mkdir ~/.m2/
              }
              if (Test-Path '~/.m2/setting.xml') {
                Write-Host "'setting.xml' exists. Overwriting the file to support multiple repositories."
              }
              Copy-Item "./eng/repo-docs/docms/daily.update.setting.xml" -Destination "~/.m2/settings.xml"
            displayName: 'Configure mvn'
            workingDirectory: $(Build.SourcesDirectory)

          - ${{ each artifact in parameters.Artifacts }}:
            - ${{if ne(artifact.skipPublishDocMs, 'true')}}:
              - template: /eng/common/pipelines/templates/steps/update-docsms-metadata.yml
                parameters:
                  PackageInfoLocations:
                    - $(Pipeline.Workspace)/${{parameters.ArtifactName}}/PackageInfo/${{artifact.name}}.json
                  WorkingDirectory: $(System.DefaultWorkingDirectory)
                  TargetDocRepoOwner: "azure-sdk"
                  TargetDocRepoName: ${{parameters.TargetDocRepoName}}
                  Language: 'java'
                  DailyDocsBuild: true
                  SparseCheckoutPaths:
                    - docs-ref-services/
                    - metadata/
                  DocValidationImageId: "$(DocValidationImageId)"

              - template: /eng/pipelines/templates/steps/fetch-package-list.yml
                parameters: 
                  JavaDocJarLocation: "$(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.groupId}}/${{artifact.name}}"
                  ArtifactName: ${{artifact.name}}
                  TargetBranch: $(TargetBranchName)
                  DocRepoLocation: $(DocRepoLocation)
                  TargetDocRepoName: ${{parameters.TargetDocRepoName}}
                  TargetDocRepoOwner: "azure-sdk"
