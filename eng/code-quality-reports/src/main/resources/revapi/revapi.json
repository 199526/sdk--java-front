[
  {
    "extension": "revapi.java",
    "configuration": {
<<<<<<< HEAD
      "missing-classes": {
        "behavior": "report",
        "ignoreMissingAnnotations": false
      },
      "matchOverloads": true
=======
      "filter": {
        "classes": {
          "exclude": [
            "com.azure.core.util.Configuration"
          ]
        },
        "packages": {
          "regex": true,
          "exclude": [
            "com\\.azure\\..+\\.(implementation|samples)(\\..+)?",
            "com\\.fasterxml\\.jackson(\\..+)?",
            "com\\.google\\.gson(\\..+)?",
            "reactor\\.(core|netty|util)(\\..+)?",
            "io\\.netty(\\..+)?",
            "(kotlin|okhttp3|okio)(\\..+)?",
            "com\\.microsoft\\.azure(\\..+)?",
            "javax\\.(jms|servlet)(\\..+)?",
            "io\\.micrometer(\\..+)?",
            "com\\.azure\\.data\\.cosmos(\\..+)?",
            "com\\.azure\\.spring\\.cloud\\.actuate(\\..+)?",
            "com\\.azure\\.spring\\.cloud\\.autoconfigure(\\..+)?",
            "com\\.azure\\.spring\\.cloud\\.stream(\\..+)?",
            "com\\.azure\\.spring\\.core(\\..+)?",
            "com\\.azure\\.spring\\.eventhubs(\\..+)?",
            "com\\.azure\\.spring\\.integration(\\..+)?",
            "com\\.azure\\.spring\\.messaging(\\..+)?",
            "com\\.azure\\.spring\\.resourcemanager(\\..+)?",
            "com\\.azure\\.spring\\.security(\\..+)?",
            "com\\.azure\\.spring\\.service(\\..+)?",
            "com\\.azure\\.spring\\.servicebus(\\..+)?",
            "com\\.azure\\.spring\\.storage(\\..+)?",
            "com\\.azure\\.spring\\.tracing(\\..+)?",
            "org\\.apache\\.avro(\\..+)?"
          ]
        }
      }
>>>>>>> feature/azure-spring-cloud-4.0
    }
  },
  {
    "extension": "revapi.versions",
    "configuration": {
      "enabled": true,
      "semantic0": false,
      "versionIncreaseAllows": {
        "major": {
          "severity": "BREAKING"
        },
        "minor": {
          "severity": "NON_BREAKING"
        },
        "patch": {
          "severity": "EQUIVALENT"
        }
      },
      "onAllowed": {
        "remove": true,
        "attachments": {
          "breaksVersioningRules": "false"
        }
      },
      "onDisallowed": {
        "criticality": "error",
        "attachments": {
          "breaksVersioningRules": "true"
        }
      },
      "passThroughDifference": [
        "java.class.nonPublicPartOfAPI"
      ]
    }
  },
  {
<<<<<<< HEAD
    "extension": "revapi.filter",
    "configuration": {
      "elements": {
        "exclude": [
          "class com\\.azure\\.core\\.util\\.Configuration",
          {
            "matcher": "java-package",
            "match": "/com\\.azure(\\..+?)?\\.(implementation|samples)(\\..*)?/"
          },
          {
            "matcher": "java-package",
            "match": "/com\\.fasterxml\\.jackson(\\..*)?/"
          },
          {
            "matcher": "java-package",
            "match": "/reactor\\.(core|netty|util)(\\..*)?/"
          },
          {
            "matcher": "java-package",
            "match": "/io\\.(micrometer|netty)(\\..*)?/"
          },
          {
            "matcher": "java-package",
            "match": "/(kotlin|okhttp3|okio)(\\..+)?/"
          },
          {
            "matcher": "java-package",
            "match": "/com\\.nimbusds(\\..*)?/"
          },
          {
            "matcher": "java-package",
            "match": "/com\\.microsoft\\.azure(\\..*)?/"
          },
          {
            "matcher": "java-package",
            "match": "/javax\\.(jms|servlet)(\\..*)?/"
          },
          {
            "matcher": "java-package",
            "match": "/com\\.azure\\.data\\.cosmos(\\..*)?/"
          },
          {
            "matcher": "java-package",
            "match": "/com\\.azure\\.spring(\\..*)?/"
          },
          {
            "matcher": "java-package",
            "match": "/org\\.apache\\.avro(\\..*)?/"
          },
          {
            "matcher": "java-package",
            "match": "/com\\.azure\\.resourcemanager(\\..+?)?\\.fluent(\\..*)?/"
          }
        ]
=======
    "extension": "revapi.ignore",
    "configuration": [
      {
        "regex": true,
        "code": "java\\.missing\\.(oldClass|newClass)",
        "new": "missing\\-class com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper",
        "exampleUseChainInNewApi": ".*com\\.azure\\.core\\.util\\.serializer\\.JacksonAdapter.*",
        "justification": "We allow this in com.azure.core.util.serializer.JacksonAdapter."
      },
      {
        "regex": true,
        "code": "java\\.class\\.(noLongerInheritsFromClass|nonFinalClassInheritsFromNewClass)",
        "class": "com.azure.identity.SharedTokenCacheCredentialBuilder",
        "justification": "SharedTokenCacheCredentialBuilder now inherits AadCredentialBuilderBase instead of CredentialBuilderBase thus being reported. However, AadCredentialBuilderBase also extends CredentialBuilderBase so it's not a breaking change."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(interface|enum|class) reactor\\..*",
        "justification": "We allow reactor classes in our external APIs. This also occurs because we check transitive dependencies, so it checks reactor jars."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|interface|enum) com\\.azure\\.communication\\.common\\..*",
        "justification": "azure-communication-common classes are allowed to be exposed."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(interface|class|enum) com\\.azure\\.core.*",
        "justification": "azure-core classes are allowed to be exposed by dependencies using them."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "interface org\\.reactivestreams\\.(Publisher|Subscriber|Subscription).*",
        "justification": "These classes exposed are publisher, subscriber, and Subscription."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|interface|enum) com\\.azure\\.storage\\..*",
        "justification": "azure-storage-common and storage blob classes are allowed to be exposed."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|interface|enum) com\\.azure\\.resourcemanager\\..*",
        "justification": "resourcemanager classes are allowed to be exposed."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|interface|enum) com\\.azure\\.security\\.keyvault\\..*",
        "justification": "keyvault classes are allowed to be exposed."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|interface|enum) com\\.azure\\.perf\\.test\\.core\\..*",
        "justification": "perf-test classes are allowed to be exposed."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(interface|class|enum) com\\.azure\\.cosmos.*",
        "justification": "azure-cosmos classes are allowed to be exposed by dependencies using them."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|enum) com\\.azure\\.data\\.schemaregistry\\..+",
        "justification": "azure-data-schemaregistry-avro depends on the schema registry classes."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(interface|class|enum) io\\.opentelemetry.*",
        "justification": "Azure Monitor Exporter is allowed to use OpenTelemetry types in public APIs as it implements interfaces defined by OpenTelemetry"
      },
      {
        "code": "java.field.constantValueChanged",
        "old": "field com.azure.messaging.eventgrid.SystemEventNames.COMMUNICATION_CHAT_MESSAGE_REMOVED_FROM_THREAD",
        "new": "field com.azure.messaging.eventgrid.SystemEventNames.COMMUNICATION_CHAT_MESSAGE_REMOVED_FROM_THREAD",
        "justification": "Correct the event type defined in swagger file"
      },
      {
        "code": "java.field.constantValueChanged",
        "old": "field com.azure.messaging.eventgrid.SystemEventNames.COMMUNICATION_CHAT_PARTICIPANT_ADDED_TO_THREAD",
        "new": "field com.azure.messaging.eventgrid.SystemEventNames.COMMUNICATION_CHAT_PARTICIPANT_ADDED_TO_THREAD",
        "justification": "Correct the event type defined in swagger file"
      },
      {
        "regex": true,
        "code": "java\\.annotation\\.attributeValueChanged",
        "new": "method byte\\[\\] com\\.azure\\.security\\.keyvault\\.keys\\.models\\.JsonWebKey::(g|s)et(D|Dp|Dq|E|K|N|P|Q|Qi|T|X|Y)\\(\\)",
        "justification": "The class used by the serialization/deserialization annotations is package private and moving it is not a breaking change."
      },
      {
        "code": "java.method.visibilityReduced",
        "new": "method com.azure.core.http.rest.RequestOptions com.azure.core.http.rest.RequestOptions::setErrorOptions(java.util.EnumSet<com.azure.core.http.rest.ErrorOptions>)",
        "justification": "The use case for ErrorOptions is not yet clear. It will be added later if there are enough data points to suggest this is needed."
      },
      {
        "code": "java.class.visibilityReduced",
        "new": "enum com.azure.core.http.rest.ErrorOptions",
        "justification": "The use case for ErrorOptions is not yet clear. It will be added later if there are enough data points to suggest this is needed."
      },
      {
        "regex": true,
        "code": "java\\.annotation\\.(added|attributeValueChanged|attributeAdded)",
        "new": "(class|method void|parameter void) com\\.azure\\.search\\.documents\\.indexes\\.models\\..*",
        "justification": "Generated classes were moved into public API, these annotations were already being used in implementation used during serialization and deserialization."
      },
      {
        "regex": true,
        "code": "java\\.annotation\\.added",
        "old": ".*",
        "annotationType": "com\\.azure\\.core\\.annotation\\.Service(Method|Client)",
        "justification": "These are SDK metadata annotations and don't affect runtime behavior."
>>>>>>> feature/azure-spring-cloud-4.0
      }
    }
  },
  {
    "extension": "revapi.differences",
    "configuration": {
      "ignore": true,
      "differences": [
        {
          "regex": true,
          "code": "java.class.nonPublicPartOfAPI",
          "new": "(class|interface) org\\.apache\\.http\\.impl\\.conn\\.CPoolEntry",
          "exampleUseChainInNewApi": ".*org\\.apache\\.http\\.HttpClientConnection.*",
          "justification": "We allow this in org.apache.http.HttpClientConnection>"
        },
        {
          "regex": true,
          "code": "java.class.nonPublicPartOfAPI",
          "new": "(class|interface) com\\.azure\\.keyvault\\.jca\\.(com|org)\\..*",
          "justification": "skip check for third party files."
        },
        {
          "regex": true,
          "code": "java.class.nonPublicPartOfAPI",
          "new": "(class|enum|interface) org\\.conscrypt\\..*",
          "justification": "skip check for third party files."
        },
        {
          "regex": true,
          "code": "java\\.class\\.externalClassExposedInAPI",
          "new": "(interface|class|enum) com\\.azure\\.(communication\\.common|core|cosmos|data\\.schemaregistry|resourcemanager|security\\.keyvault|storage).*",
          "justification": "SDK classes are allowed to be exposed by dependencies using them."
        },
        {
          "regex": true,
          "code": "java\\.class\\.externalClassExposedInAPI",
          "new": "interface org\\.reactivestreams\\.(Publisher|Subscriber|Subscription).*",
          "justification": "These classes exposed are publisher, subscriber, and Subscription."
        },
        {
          "regex": true,
          "code": "java\\.method\\.addedToInterface",
          "new": "method .* com\\.azure\\.resourcemanager\\..*",
          "justification": "resourcemanager interfaces are allowed to add methods."
        },
        {
          "regex": true,
          "code": "java\\.class\\.externalClassExposedInAPI",
          "new": "(class|interface|enum) com\\.azure\\.perf\\.test\\.core\\..*",
          "justification": "perf-test classes are allowed to be exposed."
        },
        {
          "regex": true,
          "code": "java\\.class\\.externalClassExposedInAPI",
          "new": "(interface|class|enum) io\\.opentelemetry.*",
          "justification": "Azure Monitor Exporter is allowed to use OpenTelemetry types in public APIs as it implements interfaces defined by OpenTelemetry"
        },
        {
          "regex": true,
          "code": "java\\.annotation\\.added",
          "old": ".*",
          "annotationType": "com\\.azure\\.core\\.annotation\\.Service(Method|Client)",
          "justification": "These are SDK metadata annotations and don't affect runtime behavior."
        },
        {
          "regex": true,
          "code": "java\\.annotation\\.attributeValueChanged",
          "new": "method byte\\[\\] com\\.azure\\.security\\.keyvault\\.keys\\.models\\.JsonWebKey::(g|s)et(D|Dp|Dq|E|K|N|P|Q|Qi|T|X|Y)\\(\\)",
          "justification": "The class used by the serialization/deserialization annotations is package private and moving it is not a breaking change."
        },
        {
          "regex": true,
          "code": "java\\.annotation\\.(added|attributeValueChanged|attributeAdded)",
          "new": "(class|method void|parameter void) com\\.azure\\.search\\.documents\\.indexes\\.models\\..*",
          "justification": "Generated classes were moved into public API, these annotations were already being used in implementation used during serialization and deserialization."
        },
        {
          "code": "java.method.added",
          "new": "method boolean com.google.gson.JsonArray::isEmpty()",
          "justification": "com.google.code.gson:gson:jar:2.8.7 added this new method."
        },
        {
          "code": "java.method.added",
          "new": "method reactor.core.publisher.Mono<java.io.InputStream> com.azure.core.http.HttpResponse::getBodyAsInputStream()",
          "justification": "New default method added to HttpResponse in azure-core."
        },
        {
          "code": "java.method.added",
          "new": "method java.lang.String com.azure.core.credential.TokenRequestContext::getTenantId()",
          "justification": "New method added to TokenRequestContext in azure-core."
        },
        {
          "code": "java.method.added",
          "new": "method com.azure.core.credential.TokenRequestContext com.azure.core.credential.TokenRequestContext::setTenantId(java.lang.String)",
          "justification": "New method added to TokenRequestContext in azure-core."
        },
        {
          "code": "java.method.added",
          "new": "method java.lang.String com.azure.storage.common.StorageSharedKeyCredential::generateAuthorizationHeader(java.net.URL, java.lang.String, com.azure.core.http.HttpHeaders, boolean)",
          "justification": "New method added to SharedKeyCredential in common not intended for use by customers. Only public for access by other packages."
        },
        {
          "code": "java.method.added",
          "new": "method <T, U> com.azure.core.util.polling.PollerFlux<T, U> com.azure.core.util.polling.PollerFlux<T, U>::create(java.time.Duration, java.util.function.Supplier<reactor.core.publisher.Mono<? extends com.azure.core.http.rest.Response<?>>>, com.azure.core.util.polling.PollingStrategy<T, U>, com.azure.core.util.serializer.TypeReference<T>, com.azure.core.util.serializer.TypeReference<U>)",
          "justification": "New method added to PollerFlux in azure-core."
        },
        {
          "code": "java.method.added",
          "new": "method java.lang.Class<T> com.azure.core.util.serializer.TypeReference<T>::getJavaClass()",
          "justification": "New method added to TypeReference in azure-core."
        },
        {
           "code": "java.method.added",
           "new": "method void com.azure.core.util.logging.ClientLogger::<init>(java.lang.Class<?>, java.util.Map<java.lang.String, java.lang.Object>)",
           "justification": "New method added to ClientLogger in azure-core:1.24.0"
        },
        {
          "code": "java.method.added",
          "new": "method void com.azure.core.util.logging.ClientLogger::<init>(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>)",
          "justification": "New method added to ClientLogger in azure-core:1.24.0"
        },
        {
          "code": "java.method.added",
          "new": "method com.azure.core.util.logging.LoggingEventBuilder com.azure.core.util.logging.ClientLogger::atError()",
          "justification": "New method added to ClientLogger in azure-core:1.24.0"
        },
        {
          "code": "java.method.added",
          "new": "method com.azure.core.util.logging.LoggingEventBuilder com.azure.core.util.logging.ClientLogger::atInfo()",
          "justification": "New method added to ClientLogger in azure-core:1.24.0"
        },
        {
          "code": "java.method.added",
          "new": "method com.azure.core.util.logging.LoggingEventBuilder com.azure.core.util.logging.ClientLogger::atVerbose()",
          "justification": "New method added to ClientLogger in azure-core:1.24.0"
        },
        {
          "code": "java.method.added",
          "new": "method com.azure.core.util.logging.LoggingEventBuilder com.azure.core.util.logging.ClientLogger::atWarning()",
          "justification": "New method added to ClientLogger in azure-core:1.24.0"
        },
        {
          "code": "java.method.visibilityReduced",
          "new": "method java.util.function.Predicate<C> com.azure.core.util.paging.ContinuablePagedFlux<C, T, P extends com.azure.core.util.paging.ContinuablePage<C extends java.lang.Object, T extends java.lang.Object>>::getContinuationPredicate()",
          "justification": "Adding a final method to an abstract class that is rarely extended. New final method uses an unlikely name that wouldn't be found in sub-types."
        },
        {
          "code": "java.method.finalMethodAddedToNonFinalClass",
          "new": "method java.util.function.Predicate<C> com.azure.core.util.paging.ContinuablePagedFlux<C, T, P extends com.azure.core.util.paging.ContinuablePage<C, T>>::getContinuationPredicate() @ com.azure.core.http.rest.PagedFlux<T>",
          "justification": "Adding a final method to an abstract class that is rarely extended. New final method uses an unlikely name that wouldn't be found in sub-types."
        }
      ]
    }
  }
]
